---
description: 
globs: 
alwaysApply: true
---
# TypeScript Best Practices

1. Prefer `type` aliases over `interface`, use `interface` when extending types.
2. Never use `any`, always define explicit types.
3. Prefer `const`, avoid unnecessary use of `let`.
4. Always define function return types explicitly.
5. Clearly define types for function arguments and return values.
6. Avoid magic strings or numbers, extract them into constants.
7. Leverage utility types (Partial, Pick, Omit, Record, etc.).
8. Always enable `strict` mode.
9. Use generics for reusable and flexible functions.
10. Separate type definitions from implementation for better readability.
